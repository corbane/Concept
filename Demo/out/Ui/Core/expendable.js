import * as Ui from "./draggable.js";
import { cssInt } from "./dom.js";
const verticalProperties = ["height", "top", "bottom"];
function defaultConfig() {
    return {
        handles: [],
        property: "height",
        open: false,
        near: 40,
        delay: 250,
        minSize: 60,
        maxSize: window.innerHeight - 60,
        direction: "tb",
        onClose: () => { },
    };
}
const toFactor = {
    lr: 1,
    rl: -1,
    tb: -1,
    bt: 1,
};
export function expandable(element, options = {}) {
    const config = defaultConfig();
    var is_open = false;
    var is_vertical = false;
    var start_size = 0;
    var open_size = 0;
    var factor_size = toFactor[config.direction];
    const draggable = Ui.draggable({
        onStartDrag: onStartDrag,
        onStopDrag: onStopDrag
    });
    updateConfig(options);
    function updateConfig(options = {}) {
        Object.assign(config, options);
        is_open = config.open;
        is_vertical = verticalProperties.includes(config.property);
        element.classList.remove(is_vertical ? "horizontal" : "vertical");
        element.classList.add(is_vertical ? "vertical" : "horizontal");
        draggable.updateConfig({
            handles: config.handles,
            onDrag: is_vertical ? onDragVertical : onDragHorizontal,
        });
    }
    function size() {
        return is_open ? cssInt(element, config.property) : 0;
    }
    function toggle() {
        if (is_open)
            close();
        else
            open();
    }
    function open() {
        element.classList.add("animate");
        element.classList.replace("close", "open");
        element.style[config.property] = open_size + "px";
        is_open = true;
    }
    function close() {
        element.classList.add("animate");
        element.classList.replace("open", "close");
        open_size = size();
        element.style[config.property] = "0px";
        is_open = false;
        config.onClose();
    }
    return {
        updateConfig,
        open,
        close,
        isOpen: () => is_open,
        isClose: () => !is_open,
        isVertical: () => is_vertical,
        isActive: () => draggable.isActive(),
        activate: () => draggable.activate(),
        desactivate: () => draggable.desactivate(),
    };
    function onStartDrag() {
        start_size = size();
        element.classList.remove("animate");
    }
    function onDragVertical(event) {
        element.style[config.property] = (start_size + factor_size * event.y) + "px";
    }
    function onDragHorizontal(event) {
        element.style[config.property] = (start_size + factor_size * event.x) + "px";
    }
    function onStopDrag(event) {
        element.classList.add("animate");
        var is_moved = is_vertical ? factor_size * event.y > config.near
            : factor_size * event.x > config.near;
        if ((is_moved == false) && event.delay <= config.delay) {
            toggle();
            return;
        }
        var size = clamp(is_vertical ? start_size + factor_size * event.y + event.velocityY
            : start_size + factor_size * event.x + event.velocityX);
        const need_close = size <= config.near;
        if (need_close) {
            close();
        }
        else {
            open_size = size;
            open();
        }
        function clamp(value) {
            return value < config.minSize ? config.minSize
                : value > config.maxSize ? config.maxSize
                    : value;
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwZW5kYWJsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL1VpL0NvcmUvZXhwZW5kYWJsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEtBQUssRUFBRSxNQUFNLGdCQUFnQixDQUFBO0FBQ3BDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxVQUFVLENBQUE7QUF3QmpDLE1BQU0sa0JBQWtCLEdBQUcsQ0FBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLFFBQVEsQ0FBRSxDQUFBO0FBRXhELFNBQVMsYUFBYTtJQUVqQixPQUFPO1FBQ0YsT0FBTyxFQUFJLEVBQUU7UUFDYixRQUFRLEVBQUcsUUFBUTtRQUNuQixJQUFJLEVBQU8sS0FBSztRQUNoQixJQUFJLEVBQU8sRUFBRTtRQUNiLEtBQUssRUFBTSxHQUFHO1FBQ2QsT0FBTyxFQUFJLEVBQUU7UUFDYixPQUFPLEVBQUksTUFBTSxDQUFDLFdBQVcsR0FBRyxFQUFFO1FBQ2xDLFNBQVMsRUFBRSxJQUFJO1FBQ2YsT0FBTyxFQUFJLEdBQUcsRUFBRSxHQUFFLENBQUM7S0FDdkIsQ0FBQTtBQUNOLENBQUM7QUFFRCxNQUFNLFFBQVEsR0FBRztJQUNaLEVBQUUsRUFBRyxDQUFDO0lBQ04sRUFBRSxFQUFHLENBQUMsQ0FBQztJQUNQLEVBQUUsRUFBRyxDQUFDLENBQUM7SUFDUCxFQUFFLEVBQUcsQ0FBQztDQUNWLENBQUE7QUFFRCxNQUFNLFVBQVUsVUFBVSxDQUFHLE9BQW9CLEVBQUUsVUFBNkIsRUFBRTtJQUU3RSxNQUFNLE1BQU0sR0FBRyxhQUFhLEVBQUcsQ0FBQTtJQUUvQixJQUFJLE9BQU8sR0FBTyxLQUFLLENBQUE7SUFDdkIsSUFBSSxXQUFXLEdBQUcsS0FBSyxDQUFBO0lBQ3ZCLElBQUksVUFBVSxHQUFJLENBQUMsQ0FBQTtJQUNuQixJQUFJLFNBQVMsR0FBSyxDQUFDLENBQUE7SUFDbkIsSUFBSSxXQUFXLEdBQUcsUUFBUSxDQUFFLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQTtJQUU3QyxNQUFNLFNBQVMsR0FBRyxFQUFFLENBQUMsU0FBUyxDQUFFO1FBQzNCLFdBQVcsRUFBRSxXQUFXO1FBQ3hCLFVBQVUsRUFBRyxVQUFVO0tBQzNCLENBQUMsQ0FBQTtJQUVGLFlBQVksQ0FBRyxPQUFPLENBQUUsQ0FBQTtJQUV4QixTQUFTLFlBQVksQ0FBRyxVQUFVLEVBQXVCO1FBRXBELE1BQU0sQ0FBQyxNQUFNLENBQUcsTUFBTSxFQUFFLE9BQU8sQ0FBRSxDQUFBO1FBRWpDLE9BQU8sR0FBTyxNQUFNLENBQUMsSUFBSSxDQUFBO1FBQ3pCLFdBQVcsR0FBRyxrQkFBa0IsQ0FBQyxRQUFRLENBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBRSxDQUFBO1FBRTdELE9BQU8sQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUUsQ0FBQTtRQUNwRSxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBTSxXQUFXLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFFLENBQUE7UUFFcEUsU0FBUyxDQUFDLFlBQVksQ0FBRTtZQUNuQixPQUFPLEVBQUUsTUFBTSxDQUFDLE9BQU87WUFDdkIsTUFBTSxFQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFBLENBQUMsQ0FBQyxnQkFBZ0I7U0FDM0QsQ0FBQyxDQUFBO0lBQ1AsQ0FBQztJQUNELFNBQVMsSUFBSTtRQUVSLE9BQU8sT0FBTyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUcsT0FBTyxFQUFFLE1BQU0sQ0FBQyxRQUFRLENBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO0lBQzdELENBQUM7SUFDRCxTQUFTLE1BQU07UUFFVixJQUFLLE9BQU87WUFDUCxLQUFLLEVBQUcsQ0FBQTs7WUFFUixJQUFJLEVBQUcsQ0FBQTtJQUNqQixDQUFDO0lBQ0QsU0FBUyxJQUFJO1FBRVIsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUcsU0FBUyxDQUFFLENBQUE7UUFDbkMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUcsT0FBTyxFQUFFLE1BQU0sQ0FBRSxDQUFBO1FBRTdDLE9BQU8sQ0FBQyxLQUFLLENBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBRSxHQUFHLFNBQVMsR0FBRyxJQUFJLENBQUE7UUFFcEQsT0FBTyxHQUFHLElBQUksQ0FBQTtJQUNuQixDQUFDO0lBQ0QsU0FBUyxLQUFLO1FBRVQsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUcsU0FBUyxDQUFFLENBQUE7UUFDbkMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUcsTUFBTSxFQUFFLE9BQU8sQ0FBRSxDQUFBO1FBRTdDLFNBQVMsR0FBRyxJQUFJLEVBQUcsQ0FBQTtRQUVuQixPQUFPLENBQUMsS0FBSyxDQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUUsR0FBRyxLQUFLLENBQUE7UUFFekMsT0FBTyxHQUFHLEtBQUssQ0FBQTtRQUVmLE1BQU0sQ0FBQyxPQUFPLEVBQUcsQ0FBQTtJQUN0QixDQUFDO0lBRUQsT0FBTztRQUNGLFlBQVk7UUFDWixJQUFJO1FBQ0osS0FBSztRQUNMLE1BQU0sRUFBTyxHQUFHLEVBQUUsQ0FBQyxPQUFPO1FBQzFCLE9BQU8sRUFBTSxHQUFHLEVBQUUsQ0FBQyxDQUFFLE9BQU87UUFDNUIsVUFBVSxFQUFHLEdBQUcsRUFBRSxDQUFDLFdBQVc7UUFDOUIsUUFBUSxFQUFLLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxRQUFRLEVBQUc7UUFDeEMsUUFBUSxFQUFLLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxRQUFRLEVBQUc7UUFDeEMsV0FBVyxFQUFFLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxXQUFXLEVBQUc7S0FDL0MsQ0FBQTtJQUVELFNBQVMsV0FBVztRQUVmLFVBQVUsR0FBRyxJQUFJLEVBQUcsQ0FBQTtRQUNwQixPQUFPLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBRyxTQUFTLENBQUUsQ0FBQTtJQUMzQyxDQUFDO0lBQ0QsU0FBUyxjQUFjLENBQUcsS0FBbUI7UUFFeEMsT0FBTyxDQUFDLEtBQUssQ0FBRyxNQUFNLENBQUMsUUFBUSxDQUFFLEdBQUcsQ0FBQyxVQUFVLEdBQUcsV0FBVyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUE7SUFDcEYsQ0FBQztJQUNELFNBQVMsZ0JBQWdCLENBQUcsS0FBbUI7UUFFMUMsT0FBTyxDQUFDLEtBQUssQ0FBRyxNQUFNLENBQUMsUUFBUSxDQUFFLEdBQUcsQ0FBQyxVQUFVLEdBQUcsV0FBVyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUE7SUFDcEYsQ0FBQztJQUNELFNBQVMsVUFBVSxDQUFHLEtBQW1CO1FBRXBDLE9BQU8sQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFHLFNBQVMsQ0FBRSxDQUFBO1FBRW5DLElBQUksUUFBUSxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLElBQUk7WUFDckMsQ0FBQyxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUE7UUFFaEUsSUFBSyxDQUFDLFFBQVEsSUFBSSxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsS0FBSyxJQUFJLE1BQU0sQ0FBQyxLQUFLLEVBQ3ZEO1lBQ0ssTUFBTSxFQUFHLENBQUE7WUFDVCxPQUFNO1NBQ1Y7UUFFRCxJQUFJLElBQUksR0FBRyxLQUFLLENBQ1gsV0FBVyxDQUFDLENBQUMsQ0FBQyxVQUFVLEdBQUcsV0FBVyxHQUFHLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLFNBQVM7WUFDdEQsQ0FBQyxDQUFDLFVBQVUsR0FBRyxXQUFXLEdBQUcsS0FBSyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsU0FBUyxDQUN0RSxDQUFBO1FBRUQsTUFBTSxVQUFVLEdBQUcsSUFBSSxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUE7UUFFdEMsSUFBSyxVQUFVLEVBQ2Y7WUFDSyxLQUFLLEVBQUcsQ0FBQTtTQUNaO2FBRUQ7WUFDSyxTQUFTLEdBQUcsSUFBSSxDQUFBO1lBQ2hCLElBQUksRUFBRyxDQUFBO1NBQ1g7UUFFRCxTQUFTLEtBQUssQ0FBRyxLQUFhO1lBRXpCLE9BQU8sS0FBSyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPO2dCQUN6QyxDQUFDLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPO29CQUN6QyxDQUFDLENBQUMsS0FBSyxDQUFBO1FBQ2pCLENBQUM7SUFDTixDQUFDO0FBQ04sQ0FBQyJ9