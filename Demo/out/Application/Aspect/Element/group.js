import { Geometry } from "../../../Lib/index.js";
import { getAspect } from "../db.js";
import { Shape } from "./shape.js";
export class Container extends Shape {
    constructor(options) {
        super(options);
        this.display_size = 1;
        this.children = [];
        // }
        // init ()
        // {
        //      super.init ()
        const entity = this.config.data;
        //for ( const child of Object.values ( entity.children ) )
        for (const child of Object.values(entity.items)) {
            const a = getAspect(child);
            //a.init ()
            this.add(a);
        }
        this.pack();
    }
    displaySize() {
        const config = this.config;
        var size = (this.display_size + config.sizeOffset) * config.sizeFactor;
        if (size < config.minSize)
            size = config.minSize;
        return size || 1;
    }
    add(child) {
        const { group } = this;
        this.children.push(child);
        if (group) {
            group.add(child.group);
            group.setCoords();
        }
    }
    pack() {
        const { group, children, config } = this;
        const positions = [];
        for (const c of children) {
            const g = c.group;
            const r = (g.width > g.height ? g.width : g.height) / 2;
            positions.push({ x: g.left, y: g.top, r: r + 6 });
        }
        const size = Geometry.packEnclose(positions) * 2;
        for (var i = 0; i < children.length; i++) {
            const g = children[i].group;
            const p = positions[i];
            g.left = p.x;
            g.top = p.y;
            group.add(g);
        }
        this.display_size = size + config.sizeOffset;
        this.updateSize();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbi9Bc3BlY3QvRWxlbWVudC9ncm91cC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sdUJBQXVCLENBQUE7QUFFaEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLFVBQVUsQ0FBQTtBQUVwQyxPQUFPLEVBQUUsS0FBSyxFQUFVLE1BQU0sWUFBWSxDQUFBO0FBRTFDLE1BQU0sT0FBTyxTQUF3RCxTQUFRLEtBQVM7SUFNakYsWUFBYyxPQUFVO1FBRW5CLEtBQUssQ0FBRyxPQUFPLENBQUUsQ0FBQTtRQUp0QixpQkFBWSxHQUFHLENBQUMsQ0FBQTtRQUtYLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFBO1FBQ3ZCLElBQUk7UUFFSixVQUFVO1FBQ1YsSUFBSTtRQUNKLHFCQUFxQjtRQUVoQixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQTtRQUUvQiwwREFBMEQ7UUFDMUQsS0FBTSxNQUFNLEtBQUssSUFBSSxNQUFNLENBQUMsTUFBTSxDQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUUsRUFDbkQ7WUFDSyxNQUFNLENBQUMsR0FBRyxTQUFTLENBQUcsS0FBSyxDQUFFLENBQUE7WUFDN0IsV0FBVztZQUNYLElBQUksQ0FBQyxHQUFHLENBQUcsQ0FBQyxDQUFFLENBQUE7U0FDbEI7UUFFRCxJQUFJLENBQUMsSUFBSSxFQUFHLENBQUE7SUFDakIsQ0FBQztJQUVELFdBQVc7UUFFTixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFBO1FBRTFCLElBQUksSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQTtRQUV0RSxJQUFLLElBQUksR0FBRyxNQUFNLENBQUMsT0FBTztZQUNyQixJQUFJLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQTtRQUUxQixPQUFPLElBQUksSUFBSSxDQUFDLENBQUE7SUFDckIsQ0FBQztJQUVELEdBQUcsQ0FBRyxLQUFZO1FBRWIsTUFBTSxFQUFFLEtBQUssRUFBRSxHQUFHLElBQUksQ0FBQTtRQUV0QixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBRyxLQUFLLENBQUUsQ0FBQTtRQUU1QixJQUFLLEtBQUssRUFDVjtZQUNLLEtBQUssQ0FBQyxHQUFHLENBQUcsS0FBSyxDQUFDLEtBQUssQ0FBRSxDQUFBO1lBQ3pCLEtBQUssQ0FBQyxTQUFTLEVBQUcsQ0FBQTtTQUN0QjtJQUNOLENBQUM7SUFFRCxJQUFJO1FBRUMsTUFBTSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFBO1FBRXhDLE1BQU0sU0FBUyxHQUFHLEVBQXdCLENBQUE7UUFFMUMsS0FBTSxNQUFNLENBQUMsSUFBSSxRQUFRLEVBQ3pCO1lBQ0ssTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQTtZQUNqQixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQTtZQUN2RCxTQUFTLENBQUMsSUFBSSxDQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBRSxDQUFBO1NBQ3hEO1FBRUQsTUFBTSxJQUFJLEdBQUksUUFBUSxDQUFDLFdBQVcsQ0FBRyxTQUFTLENBQUUsR0FBRyxDQUFDLENBQUE7UUFFcEQsS0FBTSxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUcsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxNQUFNLEVBQUcsQ0FBQyxFQUFFLEVBQzNDO1lBQ0ssTUFBTSxDQUFDLEdBQUcsUUFBUSxDQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQTtZQUM1QixNQUFNLENBQUMsR0FBRyxTQUFTLENBQUUsQ0FBQyxDQUFDLENBQUE7WUFFdkIsQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFBO1lBQ1osQ0FBQyxDQUFDLEdBQUcsR0FBSSxDQUFDLENBQUMsQ0FBQyxDQUFBO1lBRVosS0FBSyxDQUFDLEdBQUcsQ0FBRyxDQUFDLENBQUUsQ0FBQTtTQUNuQjtRQUVELElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUE7UUFFNUMsSUFBSSxDQUFDLFVBQVUsRUFBRyxDQUFBO0lBQ3ZCLENBQUM7Q0FFTCJ9