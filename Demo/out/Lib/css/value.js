import { getUnit } from "./unit.js";
export function get(element, property) {
    var value = element.style[property];
    if (typeof value == "string" && value.trim().length != 0)
        return value;
    return window.getComputedStyle(element).getPropertyValue(property);
}
export function getInt(element, property) {
    var value = parseInt(element.style[property]);
    if (Number.isNaN(value)) {
        value = parseInt(window.getComputedStyle(element)[property]);
        if (Number.isNaN(value))
            value = 0;
    }
    return value;
}
export function getFloat(element, property) {
    var value = parseFloat(element.style[property]);
    if (Number.isNaN(value)) {
        value = parseFloat(window.getComputedStyle(element)[property]);
        if (Number.isNaN(value))
            value = 0;
    }
    return value;
}
const cacheConverted = {};
export function convertPxToUnit(el, value, unit) {
    if (typeof value == "string") {
        const valueUnit = getUnit(value);
        if (valueUnit === unit)
            return value;
        if (['deg', 'rad', 'turn'].indexOf(valueUnit))
            return value;
    }
    const cached = cacheConverted[value + unit];
    if (typeof cached != "undefined")
        return cached;
    const baseline = 100;
    const tempEl = document.createElement(el.tagName);
    const parentEl = el.parentNode && el.parentNode !== document
        ? el.parentNode
        : document.body;
    parentEl.appendChild(tempEl);
    tempEl.style.position = 'absolute';
    tempEl.style.width = baseline + unit;
    const factor = baseline / tempEl.offsetWidth;
    parentEl.removeChild(tempEl);
    const convertedUnit = factor * parseFloat(value);
    cacheConverted[value + unit] = convertedUnit;
    return convertedUnit;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsdWUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9MaWIvY3NzL3ZhbHVlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBUSxPQUFPLEVBQUUsTUFBTSxXQUFXLENBQUE7QUFJekMsTUFBTSxVQUFVLEdBQUcsQ0FBRyxPQUFtQixFQUFFLFFBQW1DO0lBRTFFLElBQUksS0FBSyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUcsUUFBUSxDQUFFLENBQUE7SUFFdEMsSUFBSyxPQUFPLEtBQUssSUFBSSxRQUFRLElBQUksS0FBSyxDQUFDLElBQUksRUFBRyxDQUFDLE1BQU0sSUFBSSxDQUFDO1FBQ3RELE9BQU8sS0FBSyxDQUFBO0lBRWhCLE9BQU8sTUFBTSxDQUFDLGdCQUFnQixDQUFHLE9BQU8sQ0FBRSxDQUFDLGdCQUFnQixDQUFHLFFBQWtCLENBQUUsQ0FBQTtBQUN0RixDQUFDO0FBRUQsTUFBTSxVQUFVLE1BQU0sQ0FBRyxPQUFtQixFQUFFLFFBQW1DO0lBRTdFLElBQUksS0FBSyxHQUFHLFFBQVEsQ0FBRyxPQUFPLENBQUMsS0FBSyxDQUFHLFFBQVEsQ0FBRSxDQUFFLENBQUE7SUFFbkQsSUFBSyxNQUFNLENBQUMsS0FBSyxDQUFHLEtBQUssQ0FBRSxFQUMzQjtRQUNJLEtBQUssR0FBRyxRQUFRLENBQUcsTUFBTSxDQUFDLGdCQUFnQixDQUFHLE9BQU8sQ0FBRSxDQUFHLFFBQVEsQ0FBRSxDQUFFLENBQUE7UUFFckUsSUFBSyxNQUFNLENBQUMsS0FBSyxDQUFHLEtBQUssQ0FBRTtZQUNuQixLQUFLLEdBQUcsQ0FBQyxDQUFBO0tBQ3BCO0lBRUQsT0FBTyxLQUFLLENBQUE7QUFDaEIsQ0FBQztBQUVELE1BQU0sVUFBVSxRQUFRLENBQUcsT0FBbUIsRUFBRSxRQUFtQztJQUUvRSxJQUFJLEtBQUssR0FBRyxVQUFVLENBQUcsT0FBTyxDQUFDLEtBQUssQ0FBRyxRQUFRLENBQUUsQ0FBRSxDQUFBO0lBRXJELElBQUssTUFBTSxDQUFDLEtBQUssQ0FBRyxLQUFLLENBQUUsRUFDM0I7UUFDSSxLQUFLLEdBQUcsVUFBVSxDQUFHLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBRyxPQUFPLENBQUUsQ0FBRyxRQUFRLENBQUUsQ0FBRSxDQUFBO1FBRXZFLElBQUssTUFBTSxDQUFDLEtBQUssQ0FBRyxLQUFLLENBQUU7WUFDbkIsS0FBSyxHQUFHLENBQUMsQ0FBQTtLQUNwQjtJQUVELE9BQU8sS0FBSyxDQUFBO0FBQ2hCLENBQUM7QUFFRCxNQUFNLGNBQWMsR0FBRyxFQUE2QixDQUFBO0FBRXBELE1BQU0sVUFBVSxlQUFlLENBQUcsRUFBVyxFQUFFLEtBQW9CLEVBQUUsSUFBVTtJQUUzRSxJQUFLLE9BQU8sS0FBSyxJQUFJLFFBQVEsRUFDN0I7UUFDSSxNQUFNLFNBQVMsR0FBRyxPQUFPLENBQUcsS0FBSyxDQUFFLENBQUE7UUFFbkMsSUFBSyxTQUFTLEtBQUssSUFBSTtZQUNuQixPQUFPLEtBQUssQ0FBQTtRQUVoQixJQUFLLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUcsU0FBUyxDQUFFO1lBQzdDLE9BQU8sS0FBSyxDQUFBO0tBQ25CO0lBRUQsTUFBTSxNQUFNLEdBQUcsY0FBYyxDQUFFLEtBQUssR0FBRyxJQUFJLENBQUMsQ0FBQTtJQUU1QyxJQUFLLE9BQU8sTUFBTSxJQUFJLFdBQVc7UUFDN0IsT0FBTyxNQUFNLENBQUE7SUFFakIsTUFBTSxRQUFRLEdBQUcsR0FBRyxDQUFBO0lBQ3BCLE1BQU0sTUFBTSxHQUFLLFFBQVEsQ0FBQyxhQUFhLENBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBRSxDQUFBO0lBQ3JELE1BQU0sUUFBUSxHQUFHLEVBQUUsQ0FBQyxVQUFVLElBQUksRUFBRSxDQUFDLFVBQVUsS0FBSyxRQUFRO1FBQzVDLENBQUMsQ0FBQyxFQUFFLENBQUMsVUFBVTtRQUNmLENBQUMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFBO0lBRS9CLFFBQVEsQ0FBQyxXQUFXLENBQUUsTUFBTSxDQUFFLENBQUE7SUFFOUIsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLEdBQUcsVUFBVSxDQUFDO0lBQ25DLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLFFBQVEsR0FBRyxJQUFJLENBQUE7SUFFcEMsTUFBTSxNQUFNLEdBQUcsUUFBUSxHQUFHLE1BQU0sQ0FBQyxXQUFXLENBQUE7SUFFNUMsUUFBUSxDQUFDLFdBQVcsQ0FBRyxNQUFNLENBQUUsQ0FBQTtJQUUvQixNQUFNLGFBQWEsR0FBRyxNQUFNLEdBQUcsVUFBVSxDQUFHLEtBQWUsQ0FBRSxDQUFBO0lBRTdELGNBQWMsQ0FBRyxLQUFLLEdBQUcsSUFBSSxDQUFFLEdBQUcsYUFBYSxDQUFBO0lBRS9DLE9BQU8sYUFBYSxDQUFBO0FBQ3hCLENBQUMifQ==